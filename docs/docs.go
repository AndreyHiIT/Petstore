// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pet": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing pet's details in the database based on the provided pet ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Update an existing Pet",
                "operationId": "UpdatePet",
                "parameters": [
                    {
                        "description": "Pet data to update",
                        "name": "pet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PetUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated pet",
                        "schema": {
                            "$ref": "#/definitions/controller.PetAddResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new pet to the database with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Add a new Pet",
                "operationId": "AddPet",
                "parameters": [
                    {
                        "description": "Pet to add",
                        "name": "pet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PetAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added pet",
                        "schema": {
                            "$ref": "#/definitions/controller.PetAddResponse"
                        }
                    }
                }
            }
        },
        "/pet/findByStatus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find pets based on their status. The status parameter is required. Available values: available, pending, sold.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Find Pets by Status",
                "operationId": "FindPetbyStatus",
                "parameters": [
                    {
                        "enum": [
                            "available",
                            "pending",
                            "sold"
                        ],
                        "type": "string",
                        "description": "Pet status to find",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found pets",
                        "schema": {
                            "$ref": "#/definitions/controller.FindPetbyStatusResponse"
                        }
                    }
                }
            }
        },
        "/pet/{petId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find a pet by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Find Pet by ID",
                "operationId": "FindPetbyID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID to find",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully found pet",
                        "schema": {
                            "$ref": "#/definitions/controller.FindPetbyIDResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a pet in the store with form data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pet"
                ],
                "summary": "Update Pet",
                "operationId": "UpdatePet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID to update",
                        "name": "petId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pet status",
                        "name": "status",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated pet",
                        "schema": {
                            "$ref": "#/definitions/controller.SuccessRequest"
                        }
                    },
                    "400": {
                        "description": "Error updating pet",
                        "schema": {
                            "$ref": "#/definitions/controller.PetAddResponseErr"
                        }
                    }
                }
            }
        },
        "/store/order": {
            "post": {
                "description": "create order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Create Order",
                "operationId": "Create Order",
                "parameters": [
                    {
                        "description": "Create order",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.RequestCreateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/controller.SuccessCreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/controller.OrderResponseErr"
                        }
                    }
                }
            }
        },
        "/store/order/{orderId}": {
            "get": {
                "description": "find order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Find Order",
                "operationId": "Find Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the order to delete",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved order",
                        "schema": {
                            "$ref": "#/definitions/controller.OrderFindByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/controller.OrderResponseErr"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Delete Order",
                "operationId": "Delete Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the order to delete",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seccess",
                        "schema": {
                            "$ref": "#/definitions/controller.OrderDeleteByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/controller.OrderResponseErr"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CreateUser",
                "operationId": "create-account",
                "parameters": [
                    {
                        "description": "account info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "description": "Fetches a user by their username.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a user by username",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "$ref": "#/definitions/controller.GetUserResponseSuccess"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the information of an existing user identified by username.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user information",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user to update",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user data",
                        "schema": {
                            "$ref": "#/definitions/controller.UserUpdateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.DataUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "userstatus": {
                    "type": "integer"
                }
            }
        },
        "controller.FindPetbyIDResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/models.Pet"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.FindPetbyStatusResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Pet"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.GetUserResponseSuccess": {
            "type": "object",
            "properties": {
                "datauser": {
                    "$ref": "#/definitions/controller.DataUser"
                },
                "error_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controller.OrderDeleteByIDResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.OrderFindByIDResponse": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/definitions/models.Order"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.OrderResponseErr": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_modules_order_controller.Data"
                },
                "errorCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.PetAddResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_modules_pet_controller.Data"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.PetAddResponseErr": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_modules_pet_controller.Data"
                },
                "errorCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controller.SuccessCreateOrderResponse": {
            "type": "object",
            "properties": {
                "orderID": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.SuccessRequest": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "controller.UserUpdateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "internal_modules_order_controller.Data": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_modules_pet_controller.Data": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "complete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "petID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "shipDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Pet": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photourls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.Category": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "service.PetAddRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/service.Category"
                },
                "name": {
                    "type": "string"
                },
                "photourls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Tag"
                    }
                }
            }
        },
        "service.PetUpdateRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/service.Category"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photourls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Tag"
                    }
                }
            }
        },
        "service.RequestCreateOrder": {
            "type": "object",
            "properties": {
                "complete": {
                    "type": "boolean"
                },
                "petid": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "shipdate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.Tag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "service.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Pet-Store",
	Description:      "Chtoto-gdeto",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
